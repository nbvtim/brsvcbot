
// "6997016766:AAGEyqHbedZPqMT060glZYweCgKDkrBVC_w"
// "6608143923:AAExMM5ymFM3A7DA0oDGX-Ko8lGXOOH9g3E"
const c             = console.log
// require("./ntba")
const xlsx          = require('node-xlsx').default.parse("/mnt/c/Users/User/Desktop/–î–û–ö–£–ú–ï–ù–¢–´/1 —Å–º–µ–Ω–∞ –°–í–ö/–û–ü–ò–°–ò/all.xlsx")
const fs            = require('fs')
const cp            = require('child_process')
const TelegramApi   = require('node-telegram-bot-api')
const bot           = new TelegramApi ("6608143923:AAExMM5ymFM3A7DA0oDGX-Ko8lGXOOH9g3E", {polling: true})

// bot.deleteMyCommands()
// bot.setMyCommands([
// //     {command:"start",       description:"–°—Ç–∞—Ä—Ç"},
//     {command:"auto",        description:"–ê–≤—Ç–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä–Ω—Ç"},
// //     {command:"key",         description:"–ö–ª—é—á–∏"},
//     {command:"settings",    description:"–ù–∞—Å—Ç—Ä–æ–π–∫–∏"},
// //     {command:"help",        description:"–ü–æ–º–æ—â—å"}
// ])


// bot.getMyCommands().then(   (t) =>  {       })
// bot.getMe().then(           (t) =>  {   c(t)    })
// bot.on("polling_error", err=>c("err"))

// const obj = {}; start()

bot.on("message", async msg=>{ 
    c(JSON.stringify(msg))
    fs.appendFileSync(`${__dirname}/SOURSE/log`, `\n${JSON.stringify(msg)}`)








    // if(!obj[msg.chat.id]){obj[msg.chat.id] = {secure: false}}
    // if(msg.entities){obj[msg.chat.id].command = msg.text}
    // fs.appendFileSync(`${__dirname}/SOURSE/log`, `\n${obj[msg.chat.id].secure} ${msg.chat.id} ${msg.from.first_name}: ${msg.text}`)
    

    // if(obj[msg.chat.id].secure){

    //     search(msg.text).forEach(el=>{
    //         bot.sendMessage(msg.chat.id, JSON.stringify(el, null, 3))
    //     })

    // }
    // if(!obj[msg.chat.id].secure){
    //     bot.sendMessage(msg.chat.id, `–ù–µ—Ç –¥–æ–ø—É—Å–∫–∞ !!! \n–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: \n\t - –§–∞–º–∏–ª–∏—è\n\t - –ò–º—è\n\t - –û—Ç—á–µ—Å—Ç–≤–æ\n\t - –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è\n\t - –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n\t - –î–æ–ª–∂–Ω–æ—Å—Ç—å`)
    // }
    // if(obj[msg.chat.id].command === "/settings" && msg.chat.id === 5131265599){
    //     bot.sendMessage(msg.chat.id, `<b> üõ†     –ù–ê–°–¢–†–û–ô–ö–ò     üõ† </b>`, {
    //         parse_mode: "HTML",
    //         reply_markup:{
    //             inline_keyboard:[
    //                 [{text: "tmate —Å—Ç–∞—Ä—Ç",          callback_data:   "t"},          {text: "tmate —Å—Ç–æ–ø", callback_data: "pkill tmate"}],
    //                 [{text: "–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",      callback_data:   "getData"}],
    //                 // [{text: "ntba —Å—Ç–∞—Ä—Ç",           callback_data:   "ntbaStart"}]
    //             ]
    //         }
    //     })

    //     zp(msg)
    // }


})

// bot.on("callback_query", query=>{
//     //c(query)
//     if(query.data === "t"){ 
//         cp.exec("tmate -k tmk-B9DVq6DFEkpcOQKWDwSDccfJRL -n pc -F")
//         bot.sendMessage(query.from.id, `–°–µ—Å—Å–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ —ç—Ç–æ–π <a href="https://tmate.io/t/nbv/pc">–°–°–´–õ–ö–ï</a>`, {parse_mode:"HTML"})
//     }
//     if(query.data === "pkill tmate"){
//         cp.spawnSync('pkill', ['tmate'])
//         bot.sendMessage(query.from.id, "–°–µ—Å—Å–∏—è tmate –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
//     }
//     if(query.data === "getData"){
//         start()
//         bot.sendMessage(query.from.id, "–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
//     }

// })





// function start(){
//     xlsx.forEach(el=>{
//         if(el.name === "users"){
//             el.data.forEach(ell=>{
//                 if(+ell[0]){
//                     obj[ell[0]] = {secure: true}
//                 }
//             })
//         }
//     })
// }

// function search(txt){
//     try {
//         arr = []
//         counter = 0
//         xlsx.forEach(el=>{
//             if(el.name == "–ê–¢"){
//                 el.data.forEach(ell=>{
//                     if(ell.join(" ").match(RegExp(txt, "i")) && counter < 5){
//                         counter++
//                         arr.push(ell)
//                     }
//                 })
//             }
//         })
//         if(arr.length == 0){
//             return ["–ü–æ –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"]
//         }else{
//             return arr
//         }
        
//     } catch (err) {
//         // c(`TRY ERR > RegExp("${msg.text}", "i") > –Ω–µ –¥–æ–ø—É—Å—Ç–∏–º—ã–π –≤–≤–æ–¥ "${msg.text}"`)
//         return [`–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ ${txt}`]
//     }
// }

// function calcSmens(){

//     // let daysInMounth = 32 - new Date(now.getFullYear(), now.getMonth(), 32).getDate()
//     now = new Date()
//     now.setUTCHours(now.getHours())
//     if(now.getDate() < 14){n = 1}else{n = 0}
//     now.setMonth(now.getMonth() - n) // —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ—Å—è—Ü–∞
//     const holiday = [
//         new Date(now.getFullYear(), 2 -1, 23, 0 +3),        // 23 –§–µ–≤—Ä–∞–ª—è
//         new Date(now.getFullYear(), 3 -1, 8,  0 +3),        // 8 –ú–∞—Ä—Ç–∞
//         new Date(now.getFullYear(), 5 -1, 1,  0 +3),        // 1 –º–∞—è
//         new Date(now.getFullYear(), 5 -1, 9,  0 +3),        // 9 –º–∞—è
//         new Date(now.getFullYear(), 6 -1, 12, 0 +3),        // –î–µ–Ω—å –†–æ—Å—Å–∏–∏
//     ]
//     const start_date = [
//         new Date("2024-01-02T08:00:00.000Z"),   // —Å–º–µ–Ω–∞ 1 –¥–µ–Ω—å
//         new Date("2024-01-03T20:00:00.000Z"),   // —Å–º–µ–Ω–∞ 1 –Ω–æ—á—å
//         new Date("2024-01-03T08:00:00.000Z"),   // —Å–º–µ–Ω–∞ 2 –¥–µ–Ω—å
//         new Date("2024-01-04T20:00:00.000Z"),   // —Å–º–µ–Ω–∞ 2 –Ω–æ—á—å
//         new Date("2024-01-04T08:00:00.000Z"),   // —Å–º–µ–Ω–∞ 3 –¥–µ–Ω—å
//         new Date("2024-01-05T20:00:00.000Z"),   // —Å–º–µ–Ω–∞ 3 –Ω–æ—á—å
//         new Date("2024-01-05T08:00:00.000Z"),   // —Å–º–µ–Ω–∞ 4 –¥–µ–Ω—å
//         new Date("2024-01-06T20:00:00.000Z")    // —Å–º–µ–Ω–∞ 4 –Ω–æ—á—å
//     ]

//     const mass = []
//     for(i in start_date){
//         while (now.getMonth() != start_date[i].getMonth()) {
//             start_date[i].setDate(start_date[i].getDate() + 4)
//         }

//         arr = []
//         while (now.getMonth() == start_date[i].getMonth()) {
//             arr.push(new Date(start_date[i]))
//             start_date[i].setDate(start_date[i].getDate() + 4)
//         }
//         mass.push(arr)
//     }

//     const obj_smens = {
//         smena_1:{day:mass[0], night:mass[1], holiday:[]},
//         smena_2:{day:mass[2], night:mass[3], holiday:[]},
//         smena_3:{day:mass[4], night:mass[5], holiday:[]},
//         smena_4:{day:mass[6], night:mass[7], holiday:[]},
//     }

//     // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö
//     for(i in obj_smens){ 
//         for(j in obj_smens[i]){
//             obj_smens[i][j].forEach(elem=>{
//                 if(j !== "holiday"){
//                     holiday.forEach(el => {
//                         if(elem.getMonth() === el.getMonth() && elem.getDate() === el.getDate()){
//                             obj_smens[i].holiday.push(elem)
//                         }
//                     })
//                 }
//             })
//         }
//     }

//     // 16 —Å–º–µ–Ω * 11 —á–∞—Å–æ–≤ = 176 - –∑–∞–∫—Ä—ã–≤–∞—é—Ç –≤ –º–µ—Å—è—Ü –µ—Å–ª–∏ –±–µ–∑ –ø—Ä–æ–≥—É–ª–æ–≤
//     // –Ω–æ—á–Ω—ã–µ 7 —á–∞—Å–æ–≤  23:00 - 06:00         20%
//     // –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ     00:00 - 23:59         
//     // –ª–µ—Ç–Ω–∏–µ = 7% –æ—Ç 
//     // 54000       –∑–∞ 16 —Å–º–µ–Ω
//     // 45000       –∑–∞ 16 —Å–º–µ–Ω
//     // –ø–∏—Ç–∞–Ω–∏–µ 32.5 –∑–∞ —á–∞—Å

//     c(obj_smens)
    
// }calcSmens()

// function zp(msg){
    
// }
// zp()