const c             = console.log
const xlsx          = require('node-xlsx').default
const fs            = require('fs')
const cp            = require('child_process')
const TelegramApi   = require('node-telegram-bot-api')
const bot           = new TelegramApi ("6608143923:AAExMM5ymFM3A7DA0oDGX-Ko8lGXOOH9g3E", {polling: true})

let dataAll, users={}, obj={}, regUser={}

// bot.deleteMyCommands()
bot.setMyCommands([
    {command:"start",       description:"–°—Ç–∞—Ä—Ç"},
    {command:"auto",        description:"–ê–≤—Ç–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä–Ω—Ç"},
    {command:"key",         description:"–ö–ª—é—á–∏"},
    {command:"food",        description:"–ü–∏—Ç–∞–Ω–∏–µ"},
    {command:"settings",    description:"–ù–∞—Å—Ç—Ä–æ–π–∫–∏"},
//     {command:"help",        description:"–ü–æ–º–æ—â—å"}
])
// bot.getMyCommands().then(   (t) =>  {       })
// bot.getMe().then(           (t) =>  {       })
// bot.on("polling_error", err=>c("err"))

bot.on("message", async msg=>{ //users[msg.chat.id] = false
    
    if( msg.entities ){ obj[msg.chat.id] = msg.text}
    if( msg.text ){fs.appendFileSync( `${__dirname}/SOURSE/log`, `${msg.date}_${msg.chat.id}_${msg.chat.first_name} >>> ${msg.text}\n` )   }   
    if(users[msg.chat.id]){ // –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –¥–æ–ø—É—Å–∫–∞





        
        if(obj[msg.chat.id] === "/start" || obj[msg.chat.id] === undefined){
            bot.sendMessage(msg.chat.id,`–í–≤–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
–ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –æ–¥–∏–Ω –∏–∑ —Ä–∞–∑–¥–µ–ª–æ–≤:
 - –ø–æ–∏—Å–∫ –ø–æ –ê–¢ /auto
 - –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–∞–º /key
 - –ø–∏—Ç–∞–Ω–∏–µ /food`, {parse_mode:"HTML"})}
        
        //
        if(obj[msg.chat.id] === "/auto" && msg.text === "/auto"){
            bot.sendMessage(msg.chat.id,`–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –ø–æ–∏—Å–∫–∞ –ø–æ –∞–≤—Ç–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É`)
        }else if(obj[msg.chat.id] === "/auto" && msg.text !== "/auto"){
            search(msg)
        }

        //
        if(obj[msg.chat.id] === "/key" && msg.text === "/key"){
            bot.sendMessage(msg.chat.id,`–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–ª—é—á–∞–º`)
        }else if(obj[msg.chat.id] === "/key" && msg.text !== "/key"){
            search(msg)
        }

        //
        if(obj[msg.chat.id] === "/food" && msg.text === "/food"){
            bot.sendMessage(msg.chat.id,`<b>–ü–æ–¥—Å—á–µ—Ç –æ—Å—Ç–∞—Ç–∫–∞ –ø–æ –ø–∏—Ç–∞–Ω–∏—é</b>\n<i>–í–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö —Å–º–µ–Ω –∏ —Å—É–º–º—É –ø–æ–∫—É–ø–æ–∫ <u>—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª</u></i>`,{parse_mode:"HTML"})
        }else if(obj[msg.chat.id] === "/food" && msg.text !== "/food"){
            msg.text = msg.text.replace(/,/g, ".")
            days = Number(msg.text.split(" ")[0])
            summ = Number(msg.text.split(" ")[1])
            bot.sendMessage(msg.chat.id,`–õ–∏–º–∏—Ç: ${32.5 * 11 * days}\n–û—Å—Ç–∞—Ç–æ–∫: ${32.5 * 11 * days - summ}`, {parse_mode:"HTML"})
        }

        //
        if(msg.text === "/settings" && msg.chat.id === 5131265599){
            bot.sendMessage(msg.chat.id, "<b> üõ† –ù–ê–°–¢–†–û–ô–ö–ò üõ† </b>", {
                parse_mode: "HTML",
                reply_markup:{
                    inline_keyboard:[
                        [{text: "‚ñ∂ Tmate —Å—Ç–∞—Ä—Ç", callback_data: "t"}, {text: "‚èπ Tmate —Å—Ç–æ–ø", callback_data: "pkill tmate"}],
                        [{text: "üîÑ –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å getData", callback_data: "getData"}]
                    ]
                }
            })
        }






    }else{

        

        
        

        if(regUser[msg.chat.id] === undefined){
            await bot.sendMessage(msg.chat.id,`–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é !!!\n–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Å—Ç–æ –≤–≤–æ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ`)
            regUser[msg.chat.id] = {}
        }
        
        if(msg.text.split(" ").length === 3){
            regUser[msg.chat.id].name = msg.text
        }
        if( +msg.text && msg.text.length === 11 && msg.text[0] === "8" && msg.text[1] === "9" ){
            regUser[msg.chat.id].tel = msg.text
        }
        if( +msg.text && msg.text.length === 8 && msg.text[0]<4 && msg.text[1]<10 && msg.text[2]<2 && msg.text[3]<10){
            regUser[msg.chat.id].date = msg.text
        }
        if(Object.keys(regUser[msg.chat.id]).length === 3){
            bot.sendMessage(msg.chat.id,`–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–∫–æ–Ω—á–µ–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è !!!\n–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Å—Ç–æ –≤–≤–æ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ`)
            fs.writeFileSync( `${__dirname}/SOURSE/${msg.chat.id}`, JSON.stringify(regUser[msg.chat.id], null, 5))
        }

        await bot.sendMessage(msg.chat.id, `–§–ò–û: ${regUser[msg.chat.id].name || "–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ"}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${regUser[msg.chat.id].tel || "89XXXXXXXXX"}\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${regUser[msg.chat.id].date || "01011970"}`)
        
        
        

    }
})




bot.on("callback_query", query=>{
    // c(query.from.id)
    if(query.data === "t"){ 
        cp.exec("tmate -k tmk-B9DVq6DFEkpcOQKWDwSDccfJRL -n pc -F")
        bot.sendMessage(query.from.id, `–°–µ—Å—Å–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ —ç—Ç–æ–π <a href="https://tmate.io/t/nbv/pc">–°–°–´–õ–ö–ï </a>`, {parse_mode:"HTML"})
    }
    if(query.data === "pkill tmate"){
        cp.spawnSync('pkill', ['tmate'])
        bot.sendMessage(query.from.id, "–°–µ—Å—Å–∏—è tmate –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    }
    if(query.data === "getData"){
        getData()
        bot.sendMessage(query.from.id, "–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    }
})



async function search(msg, bd = dataAll, command = obj[msg.chat.id], txt = msg.text){
    let objec = {
        "–ê–¢" :      "/auto",
        "–ö–ª—é—á–∏" :   "/key"
    }

    for(j in bd){
        for(i in Object.keys(objec)){        
            if(Object.keys(objec)[i] === bd[j].name && command === Object.values(objec)[i]){
                counter = 0
                for(k in bd[j].data){
                    str = bd[j].data[k].join("").replace(/ /g, "").toLowerCase().match(RegExp(txt, "i"))
                    if(str !== null){
                        if(counter < 5){
                            await bot.sendMessage(msg.chat.id, `<i>${bd[j].data[k].join("\n")}</i>`, {parse_mode:"HTML"})
                        }
                        counter++
                    }
                }
                await bot.sendMessage(msg.chat.id, `<b>–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: </b>${counter}`,{parse_mode:"HTML"})
            }
        }
    }
}

function getData(path = "/mnt/c/Users/User/Desktop/–î–û–ö–£–ú–ï–ù–¢–´/1 —Å–º–µ–Ω–∞ –°–í–ö/–û–ü–ò–°–ò/all.xlsx"){
    if(fs.existsSync(path)){
        dataAll = xlsx.parse(path) // =>
        for(i in dataAll){
            if(dataAll[i].name === "users"){
                for(j in dataAll[i].data){
                    if(+dataAll[i].data[j][0]){
                        users[dataAll[i].data[j][0]] = true 
                    }
                }
            }
        }
    }
}getData()